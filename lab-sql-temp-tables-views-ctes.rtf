{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red155\green222\blue158;\red32\green32\blue32;\red219\green219\blue219;
\red125\green140\blue147;\red247\green89\blue114;}
{\*\expandedcolortbl;;\csgenericrgb\c60784\c87059\c61961;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c85882\c85882\c85882;
\csgenericrgb\c49020\c54902\c57647;\csgenericrgb\c96863\c34902\c44706;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab624
\pard\pardeftab624\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 USE\cf4  sakila;\
\
\
\cf5 -- Step 1: Create a View\
-- First, create a view that summarizes rental information for each customer. The view should include the customer's ID, name, email address, and total number of rentals.\
\cf4 \
\cf2 DROP\cf4  \cf2 VIEW\cf4  customer_rental_summary;\
\cf2 CREATE\cf4  \cf2 VIEW\cf4  customer_rental_summary \cf2 AS\cf4 \
\cf2 SELECT\cf4  \
    c.customer_id,\
    CONCAT(c.first_name, \cf6 ' '\cf4 , c.last_name) \cf2 AS\cf4  customer_name,\
    c.email,\
    COUNT(\cf2 *\cf4 ) \cf2 AS\cf4  rental_count\
\cf2 FROM\cf4  \
    customer \cf2 AS\cf4  c\
    \cf2 JOIN\cf4  rental \cf2 AS\cf4  r \cf2 ON\cf4  c.customer_id = r.customer_id\
\cf2 GROUP\cf4  \cf2 BY\cf4  \
    c.customer_id\
\cf2 ORDER\cf4  \cf2 BY\cf4  \
    rental_count \cf2 DESC\cf4 ;\
\
\cf5 -- Step 2:  Create a Temporary Table\
-- Next, create a Temporary Table that calculates the total amount paid by each customer. The Temporary Table should use the rental summary view created in Step 1 to join with the payment table and calculate the total amount paid by each customer.\
\cf2 CREATE\cf4  TEMPORARY \cf2 TABLE\cf4  customer_payment_summary \cf2 AS\cf4  (\
    \cf2 SELECT\cf4  \
        crs.customer_id,\
        SUM(p.amount) \cf2 AS\cf4  total_paid\
    \cf2 FROM\cf4  \
        customer_rental_summary \cf2 AS\cf4  crs\
        \cf2 JOIN\cf4  rental \cf2 AS\cf4  r \cf2 ON\cf4  crs.customer_id = r.customer_id\
        \cf2 JOIN\cf4  payment \cf2 AS\cf4  p \cf2 ON\cf4  r.rental_id = p.rental_id\
    \cf2 GROUP\cf4  \cf2 BY\cf4  \
        crs.customer_id\
);\
\
\cf5 -- Step 3: Create a CTE and the Customer Summary Report\
-- Now, create a CTE that joins the rental summary view with the customer payment summary Temporary Table created in Step 2. The CTE should include the customer's name, email address, rental count, and total amount paid.\
-- And using the CTE, create the query to generate the customer summary report.\
\cf4 WITH customer_summary_report \cf2 AS\cf4 (\
\cf2 SELECT\cf4  \
    crs.customer_name,\
    crs.email,\
    crs.rental_count,\
    cps.total_paid\
\cf2 FROM\cf4  \
    customer_rental_summary \cf2 AS\cf4  crs\
    \cf2 JOIN\cf4  customer_payment_summary \cf2 AS\cf4  cps \cf2 ON\cf4  crs.customer_id = cps.customer_id)\
\
\cf5 -- Create the query to generate the customer summary report.\
\cf2 SELECT\cf4  \
    \cf2 *\cf4 ,\
    total_paid / rental_count \cf2 AS\cf4  average_payment_per_rental\
\cf2 FROM\cf4  \
    customer_summary_report\
\cf2 ORDER\cf4  \cf2 BY\cf4  \
    rental_count \cf2 DESC\cf4 ;}